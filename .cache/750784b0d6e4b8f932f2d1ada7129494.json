{"dependencies":[{"name":"/Users/marccoquand/Documents/work/startupapparatus/website/frontend/package.json","includedInParent":true,"mtime":1528732074198},{"name":"/Users/marccoquand/Documents/work/startupapparatus/website/frontend/.babelrc","includedInParent":true,"mtime":1529143217746},{"name":"/Users/marccoquand/Documents/work/startupapparatus/website/node_modules/ramda/package.json","includedInParent":true,"mtime":1507569560000},{"name":"./internal/_curry1","loc":{"line":1,"column":20}},{"name":"./internal/_makeFlat","loc":{"line":2,"column":22}}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});var e=require(\"./internal/_curry1\"),r=a(e),t=require(\"./internal/_makeFlat\"),u=a(t);function a(e){return e&&e.__esModule?e:{default:e}}var l=(0,r.default)((0,u.default)(!0));exports.default=l;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"../node_modules/ramda/es/flatten.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"../node_modules/ramda/es/flatten.js","original":{"line":2,"column":0}},{"generated":{"line":17,"column":0},"source":"../node_modules/ramda/es/flatten.js","original":{"line":4,"column":0}},{"generated":{"line":34,"column":0},"source":"../node_modules/ramda/es/flatten.js","original":{"line":21,"column":0}},{"name":"flatten","generated":{"line":34,"column":4},"source":"../node_modules/ramda/es/flatten.js","original":{"line":21,"column":4}},{"generated":{"line":34,"column":14},"source":"../node_modules/ramda/es/flatten.js","original":{"line":21,"column":14}},{"generated":{"line":34,"column":27},"source":"../node_modules/ramda/es/flatten.js","original":{"line":21,"column":27}},{"generated":{"line":34,"column":49},"source":"../node_modules/ramda/es/flatten.js","original":{"line":21,"column":36}},{"generated":{"line":34,"column":62},"source":"../node_modules/ramda/es/flatten.js","original":{"line":21,"column":49}},{"generated":{"line":34,"column":86},"source":"../node_modules/ramda/es/flatten.js","original":{"line":21,"column":59}},{"generated":{"line":34,"column":90},"source":"../node_modules/ramda/es/flatten.js","original":{"line":21,"column":49}},{"generated":{"line":34,"column":91},"source":"../node_modules/ramda/es/flatten.js","original":{"line":21,"column":27}},{"generated":{"line":34,"column":92},"source":"../node_modules/ramda/es/flatten.js","original":{"line":21,"column":0}},{"name":"flatten","generated":{"line":35,"column":18},"source":"../node_modules/ramda/es/flatten.js","original":{"line":22,"column":15}}],"sources":{"../node_modules/ramda/es/flatten.js":"import _curry1 from './internal/_curry1';\nimport _makeFlat from './internal/_makeFlat';\n\n/**\n * Returns a new list by pulling every item out of it (and all its sub-arrays)\n * and putting them in a new array, depth-first.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b]\n * @param {Array} list The array to consider.\n * @return {Array} The flattened list.\n * @see R.unnest\n * @example\n *\n *      R.flatten([1, 2, [3, 4], 5, [6, [7, 8, [9, [10, 11], 12]]]]);\n *      //=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n */\nvar flatten = /*#__PURE__*/_curry1( /*#__PURE__*/_makeFlat(true));\nexport default flatten;"},"lineCount":null}},"hash":"e34c41d57735526c5bf71b9c089d0a0d","cacheData":{"env":{}}}