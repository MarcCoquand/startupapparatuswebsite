{"dependencies":[{"name":"/Users/marccoquand/Documents/work/startupapparatus/website/frontend/package.json","includedInParent":true,"mtime":1528732074198},{"name":"/Users/marccoquand/Documents/work/startupapparatus/website/frontend/.babelrc","includedInParent":true,"mtime":1529143217746},{"name":"/Users/marccoquand/Documents/work/startupapparatus/website/node_modules/ramda/package.json","includedInParent":true,"mtime":1507569560000},{"name":"./slice","loc":{"line":1,"column":18}}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});var e=require(\"./slice\"),r=t(e);function t(e){return e&&e.__esModule?e:{default:e}}var u=(0,r.default)(0,-1);exports.default=u;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"../node_modules/ramda/es/init.js","original":{"line":1,"column":0}},{"generated":{"line":13,"column":0},"source":"../node_modules/ramda/es/init.js","original":{"line":3,"column":0}},{"generated":{"line":37,"column":0},"source":"../node_modules/ramda/es/init.js","original":{"line":27,"column":0}},{"name":"init","generated":{"line":37,"column":4},"source":"../node_modules/ramda/es/init.js","original":{"line":27,"column":4}},{"generated":{"line":37,"column":11},"source":"../node_modules/ramda/es/init.js","original":{"line":27,"column":11}},{"generated":{"line":37,"column":24},"source":"../node_modules/ramda/es/init.js","original":{"line":27,"column":24}},{"generated":{"line":37,"column":45},"source":"../node_modules/ramda/es/init.js","original":{"line":27,"column":30}},{"generated":{"line":37,"column":46},"source":"../node_modules/ramda/es/init.js","original":{"line":27,"column":24}},{"generated":{"line":37,"column":48},"source":"../node_modules/ramda/es/init.js","original":{"line":27,"column":33}},{"generated":{"line":37,"column":49},"source":"../node_modules/ramda/es/init.js","original":{"line":27,"column":34}},{"generated":{"line":37,"column":50},"source":"../node_modules/ramda/es/init.js","original":{"line":27,"column":24}},{"generated":{"line":37,"column":51},"source":"../node_modules/ramda/es/init.js","original":{"line":27,"column":0}},{"name":"init","generated":{"line":38,"column":18},"source":"../node_modules/ramda/es/init.js","original":{"line":28,"column":15}}],"sources":{"../node_modules/ramda/es/init.js":"import slice from './slice';\n\n/**\n * Returns all but the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.last, R.head, R.tail\n * @example\n *\n *      R.init([1, 2, 3]);  //=> [1, 2]\n *      R.init([1, 2]);     //=> [1]\n *      R.init([1]);        //=> []\n *      R.init([]);         //=> []\n *\n *      R.init('abc');  //=> 'ab'\n *      R.init('ab');   //=> 'a'\n *      R.init('a');    //=> ''\n *      R.init('');     //=> ''\n */\nvar init = /*#__PURE__*/slice(0, -1);\nexport default init;"},"lineCount":null}},"hash":"61cfe03111abc190c8954470f4ed6242","cacheData":{"env":{}}}