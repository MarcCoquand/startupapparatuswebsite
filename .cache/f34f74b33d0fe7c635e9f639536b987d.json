{"dependencies":[{"name":"/Users/marccoquand/Documents/work/startupapparatus/website/frontend/package.json","includedInParent":true,"mtime":1528732074198},{"name":"/Users/marccoquand/Documents/work/startupapparatus/website/frontend/.babelrc","includedInParent":true,"mtime":1529143217746},{"name":"/Users/marccoquand/Documents/work/startupapparatus/website/node_modules/ramda/package.json","includedInParent":true,"mtime":1507569560000},{"name":"./internal/_assign","loc":{"line":1,"column":20}},{"name":"./internal/_curry2","loc":{"line":2,"column":20}}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});var e=require(\"./internal/_assign\"),r=n(e),t=require(\"./internal/_curry2\"),u=n(t);function n(e){return e&&e.__esModule?e:{default:e}}var a=(0,u.default)(function(e,t){return(0,r.default)({},e,t)});exports.default=a;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"../node_modules/ramda/es/merge.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"../node_modules/ramda/es/merge.js","original":{"line":2,"column":0}},{"generated":{"line":17,"column":0},"source":"../node_modules/ramda/es/merge.js","original":{"line":4,"column":0}},{"generated":{"line":40,"column":0},"source":"../node_modules/ramda/es/merge.js","original":{"line":27,"column":0}},{"name":"merge","generated":{"line":40,"column":4},"source":"../node_modules/ramda/es/merge.js","original":{"line":27,"column":4}},{"generated":{"line":40,"column":12},"source":"../node_modules/ramda/es/merge.js","original":{"line":27,"column":12}},{"generated":{"line":40,"column":25},"source":"../node_modules/ramda/es/merge.js","original":{"line":27,"column":25}},{"generated":{"line":40,"column":46},"source":"../node_modules/ramda/es/merge.js","original":{"line":27,"column":33}},{"name":"merge","generated":{"line":40,"column":55},"source":"../node_modules/ramda/es/merge.js","original":{"line":27,"column":42}},{"generated":{"line":40,"column":60},"source":"../node_modules/ramda/es/merge.js","original":{"line":27,"column":33}},{"name":"l","generated":{"line":40,"column":61},"source":"../node_modules/ramda/es/merge.js","original":{"line":27,"column":48}},{"generated":{"line":40,"column":62},"source":"../node_modules/ramda/es/merge.js","original":{"line":27,"column":33}},{"name":"r","generated":{"line":40,"column":64},"source":"../node_modules/ramda/es/merge.js","original":{"line":27,"column":51}},{"generated":{"line":40,"column":65},"source":"../node_modules/ramda/es/merge.js","original":{"line":27,"column":33}},{"generated":{"line":40,"column":67},"source":"../node_modules/ramda/es/merge.js","original":{"line":27,"column":54}},{"generated":{"line":41,"column":0},"source":"../node_modules/ramda/es/merge.js","original":{"line":28,"column":2}},{"generated":{"line":41,"column":9},"source":"../node_modules/ramda/es/merge.js","original":{"line":28,"column":9}},{"generated":{"line":41,"column":31},"source":"../node_modules/ramda/es/merge.js","original":{"line":28,"column":17}},{"generated":{"line":41,"column":33},"source":"../node_modules/ramda/es/merge.js","original":{"line":28,"column":9}},{"name":"l","generated":{"line":41,"column":35},"source":"../node_modules/ramda/es/merge.js","original":{"line":28,"column":21}},{"generated":{"line":41,"column":36},"source":"../node_modules/ramda/es/merge.js","original":{"line":28,"column":9}},{"name":"r","generated":{"line":41,"column":38},"source":"../node_modules/ramda/es/merge.js","original":{"line":28,"column":24}},{"generated":{"line":41,"column":39},"source":"../node_modules/ramda/es/merge.js","original":{"line":28,"column":9}},{"generated":{"line":41,"column":40},"source":"../node_modules/ramda/es/merge.js","original":{"line":28,"column":2}},{"generated":{"line":42,"column":0},"source":"../node_modules/ramda/es/merge.js","original":{"line":29,"column":1}},{"generated":{"line":42,"column":1},"source":"../node_modules/ramda/es/merge.js","original":{"line":27,"column":25}},{"generated":{"line":42,"column":2},"source":"../node_modules/ramda/es/merge.js","original":{"line":27,"column":0}},{"name":"merge","generated":{"line":43,"column":18},"source":"../node_modules/ramda/es/merge.js","original":{"line":30,"column":15}}],"sources":{"../node_modules/ramda/es/merge.js":"import _assign from './internal/_assign';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepRight, R.mergeWith, R.mergeWithKey\n * @example\n *\n *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      var resetToDefault = R.merge(R.__, {x: 0});\n *      resetToDefault({x: 5, y: 2}); //=> {x: 0, y: 2}\n * @symb R.merge({ x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: 5, z: 3 }\n */\nvar merge = /*#__PURE__*/_curry2(function merge(l, r) {\n  return _assign({}, l, r);\n});\nexport default merge;"},"lineCount":null}},"hash":"be64b9e0cf9a199a3805c13667c02841","cacheData":{"env":{}}}