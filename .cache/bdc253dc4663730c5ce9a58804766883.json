{"dependencies":[{"name":"/Users/marccoquand/Documents/work/startupapparatus/website/frontend/package.json","includedInParent":true,"mtime":1528732074198},{"name":"/Users/marccoquand/Documents/work/startupapparatus/website/frontend/.babelrc","includedInParent":true,"mtime":1529143217746},{"name":"/Users/marccoquand/Documents/work/startupapparatus/website/node_modules/ramda/package.json","includedInParent":true,"mtime":1507569560000},{"name":"./internal/_curry1","loc":{"line":1,"column":20}},{"name":"./internal/_reduced","loc":{"line":2,"column":21}}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});var e=require(\"./internal/_curry1\"),r=a(e),t=require(\"./internal/_reduced\"),u=a(t);function a(e){return e&&e.__esModule?e:{default:e}}var d=(0,r.default)(u.default);exports.default=d;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"../node_modules/ramda/es/reduced.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"../node_modules/ramda/es/reduced.js","original":{"line":2,"column":0}},{"generated":{"line":17,"column":0},"source":"../node_modules/ramda/es/reduced.js","original":{"line":4,"column":0}},{"generated":{"line":41,"column":0},"source":"../node_modules/ramda/es/reduced.js","original":{"line":28,"column":0}},{"name":"reduced","generated":{"line":41,"column":4},"source":"../node_modules/ramda/es/reduced.js","original":{"line":28,"column":4}},{"generated":{"line":41,"column":14},"source":"../node_modules/ramda/es/reduced.js","original":{"line":28,"column":14}},{"generated":{"line":41,"column":27},"source":"../node_modules/ramda/es/reduced.js","original":{"line":28,"column":27}},{"name":"_reduced","generated":{"line":41,"column":48},"source":"../node_modules/ramda/es/reduced.js","original":{"line":28,"column":35}},{"generated":{"line":41,"column":65},"source":"../node_modules/ramda/es/reduced.js","original":{"line":28,"column":27}},{"generated":{"line":41,"column":66},"source":"../node_modules/ramda/es/reduced.js","original":{"line":28,"column":0}},{"name":"reduced","generated":{"line":42,"column":18},"source":"../node_modules/ramda/es/reduced.js","original":{"line":29,"column":15}}],"sources":{"../node_modules/ramda/es/reduced.js":"import _curry1 from './internal/_curry1';\nimport _reduced from './internal/_reduced';\n\n/**\n * Returns a value wrapped to indicate that it is the final value of the reduce\n * and transduce functions. The returned value should be considered a black\n * box: the internal structure is not guaranteed to be stable.\n *\n * Note: this optimization is unavailable to functions not explicitly listed\n * above. For instance, it is not currently supported by\n * [`reduceRight`](#reduceRight).\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category List\n * @sig a -> *\n * @param {*} x The final value of the reduce.\n * @return {*} The wrapped value.\n * @see R.reduce, R.transduce\n * @example\n *\n *     R.reduce(\n *       (acc, item) => item > 3 ? R.reduced(acc) : acc.concat(item),\n *       [],\n *       [1, 2, 3, 4, 5]) // [1, 2, 3]\n */\nvar reduced = /*#__PURE__*/_curry1(_reduced);\nexport default reduced;"},"lineCount":null}},"hash":"63181d3a4836de0394105e80442b4aab","cacheData":{"env":{}}}