{"dependencies":[{"name":"/Users/marccoquand/Documents/work/startupapparatus/website/frontend/package.json","includedInParent":true,"mtime":1528732074198},{"name":"/Users/marccoquand/Documents/work/startupapparatus/website/frontend/.babelrc","includedInParent":true,"mtime":1529143217746},{"name":"/Users/marccoquand/Documents/work/startupapparatus/website/node_modules/ramda/package.json","includedInParent":true,"mtime":1507569560000},{"name":"./always","loc":{"line":1,"column":19}}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});var e=require(\"./always\"),r=t(e);function t(e){return e&&e.__esModule?e:{default:e}}var u=(0,r.default)(!0);exports.default=u;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"../node_modules/ramda/es/T.js","original":{"line":1,"column":0}},{"generated":{"line":13,"column":0},"source":"../node_modules/ramda/es/T.js","original":{"line":3,"column":0}},{"generated":{"line":28,"column":0},"source":"../node_modules/ramda/es/T.js","original":{"line":18,"column":0}},{"name":"T","generated":{"line":28,"column":4},"source":"../node_modules/ramda/es/T.js","original":{"line":18,"column":4}},{"generated":{"line":28,"column":8},"source":"../node_modules/ramda/es/T.js","original":{"line":18,"column":8}},{"generated":{"line":28,"column":21},"source":"../node_modules/ramda/es/T.js","original":{"line":18,"column":21}},{"generated":{"line":28,"column":43},"source":"../node_modules/ramda/es/T.js","original":{"line":18,"column":28}},{"generated":{"line":28,"column":47},"source":"../node_modules/ramda/es/T.js","original":{"line":18,"column":21}},{"generated":{"line":28,"column":48},"source":"../node_modules/ramda/es/T.js","original":{"line":18,"column":0}},{"name":"T","generated":{"line":29,"column":18},"source":"../node_modules/ramda/es/T.js","original":{"line":19,"column":15}}],"sources":{"../node_modules/ramda/es/T.js":"import always from './always';\n\n/**\n * A function that always returns `true`. Any passed in parameters are ignored.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig * -> Boolean\n * @param {*}\n * @return {Boolean}\n * @see R.always, R.F\n * @example\n *\n *      R.T(); //=> true\n */\nvar T = /*#__PURE__*/always(true);\nexport default T;"},"lineCount":null}},"hash":"97352b8a3e09d51c915f9bf3de5f19e1","cacheData":{"env":{}}}