{"dependencies":[{"name":"/Users/marccoquand/Documents/work/startupapparatus/website/frontend/package.json","includedInParent":true,"mtime":1528732074198},{"name":"/Users/marccoquand/Documents/work/startupapparatus/website/frontend/.babelrc","includedInParent":true,"mtime":1529143217746},{"name":"/Users/marccoquand/Documents/work/startupapparatus/website/node_modules/ramda/package.json","includedInParent":true,"mtime":1507569560000},{"name":"./internal/_concat","loc":{"line":1,"column":20}},{"name":"./internal/_curry2","loc":{"line":2,"column":20}},{"name":"./compose","loc":{"line":3,"column":20}},{"name":"./uniq","loc":{"line":4,"column":17}}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});var e=require(\"./internal/_concat\"),r=d(e),u=require(\"./internal/_curry2\"),t=d(u),a=require(\"./compose\"),l=d(a),i=require(\"./uniq\"),n=d(i);function d(e){return e&&e.__esModule?e:{default:e}}var o=(0,t.default)((0,l.default)(n.default,r.default));exports.default=o;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"../node_modules/ramda/es/union.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"../node_modules/ramda/es/union.js","original":{"line":2,"column":0}},{"generated":{"line":15,"column":0},"source":"../node_modules/ramda/es/union.js","original":{"line":3,"column":0}},{"generated":{"line":19,"column":0},"source":"../node_modules/ramda/es/union.js","original":{"line":4,"column":0}},{"generated":{"line":25,"column":0},"source":"../node_modules/ramda/es/union.js","original":{"line":6,"column":0}},{"generated":{"line":42,"column":0},"source":"../node_modules/ramda/es/union.js","original":{"line":23,"column":0}},{"name":"union","generated":{"line":42,"column":4},"source":"../node_modules/ramda/es/union.js","original":{"line":23,"column":4}},{"generated":{"line":42,"column":12},"source":"../node_modules/ramda/es/union.js","original":{"line":23,"column":12}},{"generated":{"line":42,"column":25},"source":"../node_modules/ramda/es/union.js","original":{"line":23,"column":25}},{"generated":{"line":42,"column":47},"source":"../node_modules/ramda/es/union.js","original":{"line":23,"column":34}},{"generated":{"line":42,"column":60},"source":"../node_modules/ramda/es/union.js","original":{"line":23,"column":47}},{"name":"uniq","generated":{"line":42,"column":83},"source":"../node_modules/ramda/es/union.js","original":{"line":23,"column":55}},{"generated":{"line":42,"column":97},"source":"../node_modules/ramda/es/union.js","original":{"line":23,"column":47}},{"name":"_concat","generated":{"line":42,"column":99},"source":"../node_modules/ramda/es/union.js","original":{"line":23,"column":61}},{"generated":{"line":42,"column":115},"source":"../node_modules/ramda/es/union.js","original":{"line":23,"column":47}},{"generated":{"line":42,"column":116},"source":"../node_modules/ramda/es/union.js","original":{"line":23,"column":25}},{"generated":{"line":42,"column":117},"source":"../node_modules/ramda/es/union.js","original":{"line":23,"column":0}},{"name":"union","generated":{"line":43,"column":18},"source":"../node_modules/ramda/es/union.js","original":{"line":24,"column":15}}],"sources":{"../node_modules/ramda/es/union.js":"import _concat from './internal/_concat';\nimport _curry2 from './internal/_curry2';\nimport compose from './compose';\nimport uniq from './uniq';\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @example\n *\n *      R.union([1, 2, 3], [2, 3, 4]); //=> [1, 2, 3, 4]\n */\nvar union = /*#__PURE__*/_curry2( /*#__PURE__*/compose(uniq, _concat));\nexport default union;"},"lineCount":null}},"hash":"5b21a6863e2c583200cdae049179303e","cacheData":{"env":{}}}