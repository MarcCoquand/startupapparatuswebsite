{"dependencies":[{"name":"/Users/marccoquand/Documents/work/startupapparatus/website/frontend/package.json","includedInParent":true,"mtime":1528732074198},{"name":"/Users/marccoquand/Documents/work/startupapparatus/website/frontend/.babelrc","includedInParent":true,"mtime":1529143217746},{"name":"/Users/marccoquand/Documents/work/startupapparatus/website/node_modules/ramda/package.json","includedInParent":true,"mtime":1507569560000},{"name":"./internal/_curry1","loc":{"line":1,"column":20}},{"name":"./assocPath","loc":{"line":2,"column":22}},{"name":"./lens","loc":{"line":3,"column":17}},{"name":"./path","loc":{"line":4,"column":17}}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});var e=require(\"./internal/_curry1\"),r=f(e),t=require(\"./assocPath\"),u=f(t),a=require(\"./lens\"),l=f(a),n=require(\"./path\"),d=f(n);function f(e){return e&&e.__esModule?e:{default:e}}var i=(0,r.default)(function(e){return(0,l.default)((0,d.default)(e),(0,u.default)(e))});exports.default=i;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"../node_modules/ramda/es/lensPath.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"../node_modules/ramda/es/lensPath.js","original":{"line":2,"column":0}},{"generated":{"line":15,"column":0},"source":"../node_modules/ramda/es/lensPath.js","original":{"line":3,"column":0}},{"generated":{"line":19,"column":0},"source":"../node_modules/ramda/es/lensPath.js","original":{"line":4,"column":0}},{"generated":{"line":25,"column":0},"source":"../node_modules/ramda/es/lensPath.js","original":{"line":6,"column":0}},{"generated":{"line":49,"column":0},"source":"../node_modules/ramda/es/lensPath.js","original":{"line":30,"column":0}},{"name":"lensPath","generated":{"line":49,"column":4},"source":"../node_modules/ramda/es/lensPath.js","original":{"line":30,"column":4}},{"generated":{"line":49,"column":15},"source":"../node_modules/ramda/es/lensPath.js","original":{"line":30,"column":15}},{"generated":{"line":49,"column":28},"source":"../node_modules/ramda/es/lensPath.js","original":{"line":30,"column":28}},{"generated":{"line":49,"column":49},"source":"../node_modules/ramda/es/lensPath.js","original":{"line":30,"column":36}},{"name":"lensPath","generated":{"line":49,"column":58},"source":"../node_modules/ramda/es/lensPath.js","original":{"line":30,"column":45}},{"generated":{"line":49,"column":66},"source":"../node_modules/ramda/es/lensPath.js","original":{"line":30,"column":36}},{"name":"p","generated":{"line":49,"column":67},"source":"../node_modules/ramda/es/lensPath.js","original":{"line":30,"column":54}},{"generated":{"line":49,"column":68},"source":"../node_modules/ramda/es/lensPath.js","original":{"line":30,"column":36}},{"generated":{"line":49,"column":70},"source":"../node_modules/ramda/es/lensPath.js","original":{"line":30,"column":57}},{"generated":{"line":50,"column":0},"source":"../node_modules/ramda/es/lensPath.js","original":{"line":31,"column":2}},{"generated":{"line":50,"column":9},"source":"../node_modules/ramda/es/lensPath.js","original":{"line":31,"column":9}},{"generated":{"line":50,"column":29},"source":"../node_modules/ramda/es/lensPath.js","original":{"line":31,"column":14}},{"name":"p","generated":{"line":50,"column":49},"source":"../node_modules/ramda/es/lensPath.js","original":{"line":31,"column":19}},{"generated":{"line":50,"column":50},"source":"../node_modules/ramda/es/lensPath.js","original":{"line":31,"column":14}},{"generated":{"line":50,"column":51},"source":"../node_modules/ramda/es/lensPath.js","original":{"line":31,"column":9}},{"generated":{"line":50,"column":53},"source":"../node_modules/ramda/es/lensPath.js","original":{"line":31,"column":23}},{"name":"p","generated":{"line":50,"column":78},"source":"../node_modules/ramda/es/lensPath.js","original":{"line":31,"column":33}},{"generated":{"line":50,"column":79},"source":"../node_modules/ramda/es/lensPath.js","original":{"line":31,"column":23}},{"generated":{"line":50,"column":80},"source":"../node_modules/ramda/es/lensPath.js","original":{"line":31,"column":9}},{"generated":{"line":50,"column":81},"source":"../node_modules/ramda/es/lensPath.js","original":{"line":31,"column":2}},{"generated":{"line":51,"column":0},"source":"../node_modules/ramda/es/lensPath.js","original":{"line":32,"column":1}},{"generated":{"line":51,"column":1},"source":"../node_modules/ramda/es/lensPath.js","original":{"line":30,"column":28}},{"generated":{"line":51,"column":2},"source":"../node_modules/ramda/es/lensPath.js","original":{"line":30,"column":0}},{"name":"lensPath","generated":{"line":52,"column":18},"source":"../node_modules/ramda/es/lensPath.js","original":{"line":33,"column":15}}],"sources":{"../node_modules/ramda/es/lensPath.js":"import _curry1 from './internal/_curry1';\nimport assocPath from './assocPath';\nimport lens from './lens';\nimport path from './path';\n\n/**\n * Returns a lens whose focus is the specified path.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @typedefn Idx = String | Int\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig [Idx] -> Lens s a\n * @param {Array} path The path to use.\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      var xHeadYLens = R.lensPath(['x', 0, 'y']);\n *\n *      R.view(xHeadYLens, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> 2\n *      R.set(xHeadYLens, 1, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: 1, z: 3}, {y: 4, z: 5}]}\n *      R.over(xHeadYLens, R.negate, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: -2, z: 3}, {y: 4, z: 5}]}\n */\nvar lensPath = /*#__PURE__*/_curry1(function lensPath(p) {\n  return lens(path(p), assocPath(p));\n});\nexport default lensPath;"},"lineCount":null}},"hash":"08cf9c00217c0a22980c3539c7cf4b73","cacheData":{"env":{}}}