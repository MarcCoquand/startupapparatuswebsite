{"dependencies":[{"name":"/Users/marccoquand/Documents/work/startupapparatus/website/frontend/package.json","includedInParent":true,"mtime":1528732074198},{"name":"/Users/marccoquand/Documents/work/startupapparatus/website/frontend/.babelrc","includedInParent":true,"mtime":1529143217746},{"name":"/Users/marccoquand/Documents/work/startupapparatus/website/node_modules/js-function-reflector/package.json","includedInParent":true,"mtime":1515090536000},{"name":"/Users/marccoquand/Documents/work/startupapparatus/website/node_modules/js-function-reflector/.babelrc","includedInParent":true,"mtime":1515090536000}],"generated":{"js":"var whitespaceRegex = /[\\s\\n\\t]+/mg;\nvar functionHeadRegex = /^function\\s*(?:(\\w+)\\s*)?\\(\\s*([^\\)]*)\\)/m;\n\nmodule.exports = function(stringFunction, regex) {\n  var matches = functionHeadRegex.exec(stringFunction);\n  if (matches.length < 3) {\n    throw new Error('Invalid function');\n  }\n  var args = matches[2] && matches[2].replace(whitespaceRegex, '').split(',') || [];\n  var name = matches[1] || 'anonymous';\n\n  return {\n    name: name,\n    args: args\n  };\n}","map":{"mappings":[{"source":"../node_modules/js-function-reflector/babel-preset-es2015-reflector/header_parser.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/js-function-reflector/babel-preset-es2015-reflector/header_parser.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/js-function-reflector/babel-preset-es2015-reflector/header_parser.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/js-function-reflector/babel-preset-es2015-reflector/header_parser.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/js-function-reflector/babel-preset-es2015-reflector/header_parser.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/js-function-reflector/babel-preset-es2015-reflector/header_parser.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/js-function-reflector/babel-preset-es2015-reflector/header_parser.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/js-function-reflector/babel-preset-es2015-reflector/header_parser.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/js-function-reflector/babel-preset-es2015-reflector/header_parser.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/js-function-reflector/babel-preset-es2015-reflector/header_parser.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/js-function-reflector/babel-preset-es2015-reflector/header_parser.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/js-function-reflector/babel-preset-es2015-reflector/header_parser.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/js-function-reflector/babel-preset-es2015-reflector/header_parser.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/js-function-reflector/babel-preset-es2015-reflector/header_parser.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/js-function-reflector/babel-preset-es2015-reflector/header_parser.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/js-function-reflector/babel-preset-es2015-reflector/header_parser.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}}],"sources":{"../node_modules/js-function-reflector/babel-preset-es2015-reflector/header_parser.js":"var whitespaceRegex = /[\\s\\n\\t]+/mg;\nvar functionHeadRegex = /^function\\s*(?:(\\w+)\\s*)?\\(\\s*([^\\)]*)\\)/m;\n\nmodule.exports = function(stringFunction, regex) {\n  var matches = functionHeadRegex.exec(stringFunction);\n  if (matches.length < 3) {\n    throw new Error('Invalid function');\n  }\n  var args = matches[2] && matches[2].replace(whitespaceRegex, '').split(',') || [];\n  var name = matches[1] || 'anonymous';\n\n  return {\n    name: name,\n    args: args\n  };\n}"},"lineCount":16}},"hash":"ca4c3ed98cb0b7de6d260b40da65bcf2","cacheData":{"env":{}}}