{"dependencies":[{"name":"/Users/marccoquand/Documents/work/startupapparatus/website/frontend/package.json","includedInParent":true,"mtime":1528732074198},{"name":"/Users/marccoquand/Documents/work/startupapparatus/website/frontend/.babelrc","includedInParent":true,"mtime":1529143217746},{"name":"/Users/marccoquand/Documents/work/startupapparatus/website/node_modules/ramda/package.json","includedInParent":true,"mtime":1507569560000},{"name":"./internal/_curry1","loc":{"line":1,"column":20}},{"name":"./liftN","loc":{"line":2,"column":18}}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});var e=require(\"./internal/_curry1\"),r=l(e),t=require(\"./liftN\"),u=l(t);function l(e){return e&&e.__esModule?e:{default:e}}var n=(0,r.default)(function(e){return(0,u.default)(e.length,e)});exports.default=n;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"../node_modules/ramda/es/lift.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"../node_modules/ramda/es/lift.js","original":{"line":2,"column":0}},{"generated":{"line":17,"column":0},"source":"../node_modules/ramda/es/lift.js","original":{"line":4,"column":0}},{"generated":{"line":39,"column":0},"source":"../node_modules/ramda/es/lift.js","original":{"line":26,"column":0}},{"name":"lift","generated":{"line":39,"column":4},"source":"../node_modules/ramda/es/lift.js","original":{"line":26,"column":4}},{"generated":{"line":39,"column":11},"source":"../node_modules/ramda/es/lift.js","original":{"line":26,"column":11}},{"generated":{"line":39,"column":24},"source":"../node_modules/ramda/es/lift.js","original":{"line":26,"column":24}},{"generated":{"line":39,"column":45},"source":"../node_modules/ramda/es/lift.js","original":{"line":26,"column":32}},{"name":"lift","generated":{"line":39,"column":54},"source":"../node_modules/ramda/es/lift.js","original":{"line":26,"column":41}},{"generated":{"line":39,"column":58},"source":"../node_modules/ramda/es/lift.js","original":{"line":26,"column":32}},{"name":"fn","generated":{"line":39,"column":59},"source":"../node_modules/ramda/es/lift.js","original":{"line":26,"column":46}},{"generated":{"line":39,"column":61},"source":"../node_modules/ramda/es/lift.js","original":{"line":26,"column":32}},{"generated":{"line":39,"column":63},"source":"../node_modules/ramda/es/lift.js","original":{"line":26,"column":50}},{"generated":{"line":40,"column":0},"source":"../node_modules/ramda/es/lift.js","original":{"line":27,"column":2}},{"generated":{"line":40,"column":9},"source":"../node_modules/ramda/es/lift.js","original":{"line":27,"column":9}},{"name":"fn","generated":{"line":40,"column":30},"source":"../node_modules/ramda/es/lift.js","original":{"line":27,"column":15}},{"name":"length","generated":{"line":40,"column":33},"source":"../node_modules/ramda/es/lift.js","original":{"line":27,"column":18}},{"generated":{"line":40,"column":39},"source":"../node_modules/ramda/es/lift.js","original":{"line":27,"column":9}},{"name":"fn","generated":{"line":40,"column":41},"source":"../node_modules/ramda/es/lift.js","original":{"line":27,"column":26}},{"generated":{"line":40,"column":43},"source":"../node_modules/ramda/es/lift.js","original":{"line":27,"column":9}},{"generated":{"line":40,"column":44},"source":"../node_modules/ramda/es/lift.js","original":{"line":27,"column":2}},{"generated":{"line":41,"column":0},"source":"../node_modules/ramda/es/lift.js","original":{"line":28,"column":1}},{"generated":{"line":41,"column":1},"source":"../node_modules/ramda/es/lift.js","original":{"line":26,"column":24}},{"generated":{"line":41,"column":2},"source":"../node_modules/ramda/es/lift.js","original":{"line":26,"column":0}},{"name":"lift","generated":{"line":42,"column":18},"source":"../node_modules/ramda/es/lift.js","original":{"line":29,"column":15}}],"sources":{"../node_modules/ramda/es/lift.js":"import _curry1 from './internal/_curry1';\nimport liftN from './liftN';\n\n/**\n * \"lifts\" a function of arity > 1 so that it may \"map over\" a list, Function or other\n * object that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.liftN\n * @example\n *\n *      var madd3 = R.lift((a, b, c) => a + b + c);\n *\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n *\n *      var madd5 = R.lift((a, b, c, d, e) => a + b + c + d + e);\n *\n *      madd5([1,2], [3], [4, 5], [6], [7, 8]); //=> [21, 22, 22, 23, 22, 23, 23, 24]\n */\nvar lift = /*#__PURE__*/_curry1(function lift(fn) {\n  return liftN(fn.length, fn);\n});\nexport default lift;"},"lineCount":null}},"hash":"1997f3ee9d663bf1556772970c276128","cacheData":{"env":{}}}