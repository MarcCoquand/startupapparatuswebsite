{"dependencies":[{"name":"/Users/marccoquand/Documents/work/startupapparatus/website/frontend/package.json","includedInParent":true,"mtime":1528732074198},{"name":"/Users/marccoquand/Documents/work/startupapparatus/website/frontend/.babelrc","includedInParent":true,"mtime":1529143217746},{"name":"/Users/marccoquand/Documents/work/startupapparatus/website/node_modules/ramda/package.json","includedInParent":true,"mtime":1507569560000},{"name":"./internal/_contains","loc":{"line":1,"column":22}},{"name":"./internal/_curry2","loc":{"line":2,"column":20}}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});var e=require(\"./internal/_contains\"),r=a(e),t=require(\"./internal/_curry2\"),u=a(t);function a(e){return e&&e.__esModule?e:{default:e}}var n=(0,u.default)(r.default);exports.default=n;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"../node_modules/ramda/es/contains.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"../node_modules/ramda/es/contains.js","original":{"line":2,"column":0}},{"generated":{"line":17,"column":0},"source":"../node_modules/ramda/es/contains.js","original":{"line":4,"column":0}},{"generated":{"line":37,"column":0},"source":"../node_modules/ramda/es/contains.js","original":{"line":24,"column":0}},{"name":"contains","generated":{"line":37,"column":4},"source":"../node_modules/ramda/es/contains.js","original":{"line":24,"column":4}},{"generated":{"line":37,"column":15},"source":"../node_modules/ramda/es/contains.js","original":{"line":24,"column":15}},{"generated":{"line":37,"column":28},"source":"../node_modules/ramda/es/contains.js","original":{"line":24,"column":28}},{"name":"_contains","generated":{"line":37,"column":49},"source":"../node_modules/ramda/es/contains.js","original":{"line":24,"column":36}},{"generated":{"line":37,"column":67},"source":"../node_modules/ramda/es/contains.js","original":{"line":24,"column":28}},{"generated":{"line":37,"column":68},"source":"../node_modules/ramda/es/contains.js","original":{"line":24,"column":0}},{"name":"contains","generated":{"line":38,"column":18},"source":"../node_modules/ramda/es/contains.js","original":{"line":25,"column":15}}],"sources":{"../node_modules/ramda/es/contains.js":"import _contains from './internal/_contains';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Returns `true` if the specified value is equal, in [`R.equals`](#equals)\n * terms, to at least one element of the given list; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Boolean\n * @param {Object} a The item to compare against.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if an equivalent item is in the list, `false` otherwise.\n * @see R.any\n * @example\n *\n *      R.contains(3, [1, 2, 3]); //=> true\n *      R.contains(4, [1, 2, 3]); //=> false\n *      R.contains({ name: 'Fred' }, [{ name: 'Fred' }]); //=> true\n *      R.contains([42], [[42]]); //=> true\n */\nvar contains = /*#__PURE__*/_curry2(_contains);\nexport default contains;"},"lineCount":null}},"hash":"746ba5e45f020219f97f32a710c4883f","cacheData":{"env":{}}}